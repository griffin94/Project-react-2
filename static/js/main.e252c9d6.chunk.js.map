{"version":3,"sources":["components/Header.js","components/Converter.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","aria-hidden","Converter","setResult","getExchangeRate","currencyName","a","fetch","response","json","parsedResponse","rates","mid","Error","convertCurrency","data","isLoading","exchangeRate","result","currencyValue","toFixed","alert","id","onSubmit","e","preventDefault","formData","currencyValueInput","target","elements","value","replace","input","test","classList","remove","nextElementSibling","textContent","add","isValuePositiveNumber","htmlFor","type","placeholder","autoComplete","Result","headerOutput","paragraphOutput","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e252c9d6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className='header'>\r\n      <span className='fa fa-cubes header__logo' aria-hidden='true'></span>\r\n      <div className='col'>\r\n        <h1 className='header__title'>Przelicznik walut</h1>\r\n        <p className='header__description'>\r\n          W pole tekstowe wpisz kwotę, a następnie wybierz walutę. Po\r\n          naciśnięciu przycisku \"Przelicz\" wpisana kwota zostanie zamieniona na\r\n          PLN. Aktualny kurs waluty pobierany jest z API NBP.\r\n        </p>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Converter = ({ setResult }) => {\r\n  const getExchangeRate = async (currencyName) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.nbp.pl/api/exchangerates/rates/a/${currencyName}/?format=json`\r\n      );\r\n      const parsedResponse = await response.json();\r\n      return parsedResponse.rates[0].mid;\r\n    } catch {\r\n      throw new Error(\"Failure during fetch data\");\r\n    }\r\n  };\r\n\r\n  const convertCurrency = async (data) => {\r\n    try {\r\n      setResult({ isLoading: true });\r\n      const exchangeRate = await getExchangeRate(data.currencyName);\r\n      const result = {\r\n        result: (data.currencyValue * exchangeRate).toFixed(2),\r\n        currencyValue: data.currencyValue,\r\n        currencyName: data.currencyName,\r\n        exchangeRate: exchangeRate,\r\n        isLoading: false,\r\n      };\r\n      setResult(result);\r\n    } catch (err) {\r\n      alert(err);\r\n      setResult({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  const isValuePositiveNumber = (input, value) => {\r\n    const re = /(^\\d*\\.?\\d*[1-9]+\\d*$)|(^[1-9]+\\d*\\.\\d*$)/;\r\n    const result = re.test(value);\r\n    if (result) {\r\n      input.classList.remove(\"text-field__input--error\");\r\n      input.nextElementSibling.textContent = \"\";\r\n    } else {\r\n      input.classList.add(\"text-field__input--error\");\r\n      input.nextElementSibling.textContent = \"Niepoprawna wartość\";\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const formData = {\r\n      currencyValueInput: e.target.elements[\"currency-amount\"],\r\n      currencyName: e.target.elements[\"currency-name\"].value,\r\n      currencyValue: e.target.elements[\"currency-amount\"].value.replace(\r\n        /,/,\r\n        \".\"\r\n      ),\r\n    };\r\n    isValuePositiveNumber(\r\n      formData.currencyValueInput,\r\n      formData.currencyValue\r\n    ) && convertCurrency(formData);\r\n  };\r\n\r\n  return (\r\n    <div className='converter'>\r\n      <form\r\n        className='converter__form'\r\n        id='currency-form'\r\n        onSubmit={submitHandler}\r\n      >\r\n        <div className='text-field'>\r\n          <label htmlFor='currency-amount' className='label text-field__label'>\r\n            Kwota\r\n          </label>\r\n          <input\r\n            type='text'\r\n            className='text-field__input'\r\n            id='currency-amount'\r\n            placeholder='Wpisz'\r\n            autoComplete='off'\r\n          />\r\n          <div className='text-field__validation'></div>\r\n        </div>\r\n        <div className='drop-down'>\r\n          <label htmlFor='currency-name' className='label drop-down__label'>\r\n            Waluta\r\n          </label>\r\n          <select className='drop-down__select' id='currency-name'>\r\n            <option value='EUR' className='drop-down__option'>\r\n              EUR\r\n            </option>\r\n            <option value='USD' className='drop-down__option'>\r\n              USD\r\n            </option>\r\n            <option value='CHF' className='drop-down__option'>\r\n              CHF\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <button className='button'>Przelicz</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import React from \"react\";\r\n\r\nconst Result = ({ result }) => {\r\n  const headerOutput = result.currencyValue\r\n    ? `${result.currencyValue} ${result.currencyName} = ${result.result} PLN`\r\n    : \"\";\r\n  const paragraphOutput = result.currencyValue ? (\r\n    <span>\r\n      <b>{`1 ${result.currencyName}`}</b> to{\" \"}\r\n      <b>{`${result.exchangeRate} zł.`}</b>\r\n    </span>\r\n  ) : (\r\n    \"\"\r\n  );\r\n  return (\r\n    <div className='result'>\r\n      <h3 className='result__header'>{headerOutput}</h3>\r\n      <p className='result__info'>{paragraphOutput}</p>\r\n      {result.isLoading && <div className='loader'></div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import \"./css/style.css\";\nimport { useState } from \"react\";\nimport Header from \"./components/Header.js\";\nimport Converter from \"./components/Converter.js\";\nimport Result from \"./components/Result.js\";\n\nfunction App() {\n  const [result, setResult] = useState(0);\n  return (\n    <div className='main-container'>\n      <Header />\n      <Converter setResult={setResult} />\n      <Result result={result} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}